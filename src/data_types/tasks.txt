Какое значение будет в переменной c после выполнения данного кода?

int a = 1;
{
    int b = 2;
}
int c = a + b;
Объясните полученный результат.

Будет ошибка, так как b используется вне зоны существования (существует в пределах {})


___________________________

Какое значение будет в переменных b, с и d после выполнения данного кода.

int a = 120;
byte b = a + 10;
byte c = (byte)(a + 10);
byte d = a + 1;
Объясните полученный результат.

b = 130, но byte хранит 8 бит, т е максимум это 127. Значит, в b будет 3 Значение
130 выходит за этот диапазон и вызовет ошибку компиляции, так как происходит неявное
сужающее преобразование без явного приведения типа

Значение, помещаемое в c, будет равно 130, но при приведении оно выйдет за пределы диапазона типа byte,
что приведет к побитному округлению (overflow):
Побитное представление 130 на 8 бит выглядит как 10000010. В результате byte будет содержать значение -126
(из-за знакового представления byte).
Результат: c = -126.

byte d = a + 1;
Здесь результат выражения a + 1 равен 120 + 1, что дает 121.
Но так как d не преобразуется в byte и поскольку операция между значениями int и 1 дает также int,
и необходимо явно привести тип, как d = (byte) (a + 1).
Однако, так как в данном случае приведение не было сделано, это вызовет ошибку компиляции

________________________--

Interface в Java — это абстрактный тип, определяющий набор методов, которые должен реализовать класс.
Интерфейс может содержать только объявления методов (без реализации) и статические финальные переменные.

interface Animal {
    void makeSound(); // метод без реализации
}

class Dog implements Animal {
    @Override
    public void makeSound() {
        System.out.println("Гав");
    }
}